{
  "info": {
    "name": "TMI Advanced Error Scenarios",
    "description": "Advanced error scenarios including 422, 409, and edge cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://127.0.0.1:8080"
    },
    {
      "key": "oauthStubUrl", 
      "value": "http://127.0.0.1:8079"
    },
    {
      "key": "testUser",
      "value": "error-test-{{$randomInt}}"
    },
    {
      "key": "accessToken",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "422 Unprocessable Entity",
      "item": [
        {
          "name": "Invalid JSON Patch Operation (422)",
          "request": {
            "method": "PATCH",
            "header": [
              {"key": "Authorization", "value": "Bearer {{accessToken}}"},
              {"key": "Content-Type", "value": "application/json-patch+json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "[{\\\"op\\\": \\\"invalid-operation\\\", \\\"path\\\": \\\"/name\\\", \\\"value\\\": \\\"test\\\"}]"
            },
            "url": {
              "raw": "{{baseUrl}}/threat_models/00000000-0000-0000-0000-000000000000",
              "host": ["{{baseUrl}}"],
              "path": ["threat_models", "00000000-0000-0000-0000-000000000000"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 422', function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test('Error mentions invalid operation', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText.toLowerCase()).to.include('invalid');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "409 Conflict",
      "item": [
        {
          "name": "Duplicate Collaboration Session (409)",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer {{accessToken}}"},
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\\"description\\\": \\\"Test collaboration session\\\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/threat_models/00000000-0000-0000-0000-000000000000/diagrams/00000000-0000-0000-0000-000000000001/collaborate",
              "host": ["{{baseUrl}}"],
              "path": ["threat_models", "00000000-0000-0000-0000-000000000000", "diagrams", "00000000-0000-0000-0000-000000000001", "collaborate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 409 or 404', function () {",
                  "    pm.expect([409, 404]).to.include(pm.response.code);",
                  "});",
                  "",
                  "pm.test('Error mentions conflict or not found', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText.toLowerCase()).to.match(/(conflict|not found)/);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "500 Server Errors",
      "item": [
        {
          "name": "Large Payload Test",
          "request": {
            "method": "POST",
            "header": [
              {"key": "Authorization", "value": "Bearer {{accessToken}}"},
              {"key": "Content-Type", "value": "application/json"}
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\\"name\\\": \\\"Large Payload Test\\\", \\\"description\\\": \\\"${'x'.repeat(10000)}\\\", \\\"threat_model_framework\\\": \\\"STRIDE\\\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/threat_models",
              "host": ["{{baseUrl}}"],
              "path": ["threat_models"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is not 500', function () {",
                  "    pm.expect(pm.response.code).to.not.equal(500);",
                  "});",
                  "",
                  "pm.test('Server handles large payload gracefully', function () {",
                  "    pm.expect([200, 201, 400, 413]).to.include(pm.response.code);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}