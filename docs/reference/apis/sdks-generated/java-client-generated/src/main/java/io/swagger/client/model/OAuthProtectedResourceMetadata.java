/*
 * TMI (Threat Modeling Improved) API
 * A RESTful API for collaborative threat modeling with full X6 graph library compatibility. This API provides schemas that align with AntV X6 cell object models for seamless integration with modern diagramming libraries. Supports OAuth 2.0 authentication with client callback integration for seamless single-page application authentication flows.  ## API Design v1.0.0  ### Authorization Model TMI uses hierarchical authorization: access control is defined at the ThreatModel level via the authorization field (readers, writers, owners). All child resources (Assets, Diagrams, Documents, Notes, Repositories, Threats) inherit permissions from their parent ThreatModel. This simplifies permission management and ensures consistent access control.  ### Bulk Operations Notes and Diagrams do not support bulk operations due to their unique creation workflows and lack of valid bulk use cases. All other resources (Threats, Assets, Documents, Repositories) support full bulk operations: POST (create), PUT (upsert), PATCH (partial update), DELETE (batch delete).  All resources support bulk metadata operations regardless of resource-level bulk support.  ### List Response Strategy - ThreatModels return summary information (TMListItem) because they contain many child objects that can be large. - Diagrams return summary information (DiagramListItem) because diagram data (cells, images) can be large. - Notes return summary information (NoteListItem) because the content field can be large. - Threats, Assets, Documents, Repositories return full schemas as they are relatively small and static.  ### PATCH Support All resources support PATCH for partial updates using JSON Patch (RFC 6902). This is particularly useful for: - Assets: Array field updates (affected_assets, trust_boundaries) ensuring no duplicates - Notes: Updating name/description without changing content field - All resources: Efficient updates without full object replacement 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OAuth 2.0 protected resource metadata as defined in RFC 9728
 */
@Schema(description = "OAuth 2.0 protected resource metadata as defined in RFC 9728")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-11-01T19:29:35.350343762Z[GMT]")

public class OAuthProtectedResourceMetadata {
  @SerializedName("resource")
  private String resource = null;

  @SerializedName("scopes_supported")
  private List<String> scopesSupported = null;

  @SerializedName("authorization_servers")
  private List<String> authorizationServers = null;

  @SerializedName("jwks_url")
  private String jwksUrl = null;

  @SerializedName("bearer_methods_supported")
  private List<String> bearerMethodsSupported = null;

  @SerializedName("resource_name")
  private String resourceName = null;

  @SerializedName("resource_documentation")
  private String resourceDocumentation = null;

  @SerializedName("tls_client_certificate_bound_access_tokens")
  private Boolean tlsClientCertificateBoundAccessTokens = null;

  public OAuthProtectedResourceMetadata resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * The protected resource&#x27;s resource identifier URL
   * @return resource
  **/
  @Schema(example = "http://localhost:8080", required = true, description = "The protected resource's resource identifier URL")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public OAuthProtectedResourceMetadata scopesSupported(List<String> scopesSupported) {
    this.scopesSupported = scopesSupported;
    return this;
  }

  public OAuthProtectedResourceMetadata addScopesSupportedItem(String scopesSupportedItem) {
    if (this.scopesSupported == null) {
      this.scopesSupported = new ArrayList<String>();
    }
    this.scopesSupported.add(scopesSupportedItem);
    return this;
  }

   /**
   * JSON array of OAuth scope values supported by this protected resource
   * @return scopesSupported
  **/
  @Schema(example = "[\"openid\",\"email\",\"profile\"]", description = "JSON array of OAuth scope values supported by this protected resource")
  public List<String> getScopesSupported() {
    return scopesSupported;
  }

  public void setScopesSupported(List<String> scopesSupported) {
    this.scopesSupported = scopesSupported;
  }

  public OAuthProtectedResourceMetadata authorizationServers(List<String> authorizationServers) {
    this.authorizationServers = authorizationServers;
    return this;
  }

  public OAuthProtectedResourceMetadata addAuthorizationServersItem(String authorizationServersItem) {
    if (this.authorizationServers == null) {
      this.authorizationServers = new ArrayList<String>();
    }
    this.authorizationServers.add(authorizationServersItem);
    return this;
  }

   /**
   * List of authorization server issuer identifiers that can issue tokens for this resource
   * @return authorizationServers
  **/
  @Schema(example = "[\"http://localhost:8080\"]", description = "List of authorization server issuer identifiers that can issue tokens for this resource")
  public List<String> getAuthorizationServers() {
    return authorizationServers;
  }

  public void setAuthorizationServers(List<String> authorizationServers) {
    this.authorizationServers = authorizationServers;
  }

  public OAuthProtectedResourceMetadata jwksUrl(String jwksUrl) {
    this.jwksUrl = jwksUrl;
    return this;
  }

   /**
   * URL of the protected resource&#x27;s JSON Web Key Set
   * @return jwksUrl
  **/
  @Schema(example = "http://localhost:8080/.well-known/jwks.json", description = "URL of the protected resource's JSON Web Key Set")
  public String getJwksUrl() {
    return jwksUrl;
  }

  public void setJwksUrl(String jwksUrl) {
    this.jwksUrl = jwksUrl;
  }

  public OAuthProtectedResourceMetadata bearerMethodsSupported(List<String> bearerMethodsSupported) {
    this.bearerMethodsSupported = bearerMethodsSupported;
    return this;
  }

  public OAuthProtectedResourceMetadata addBearerMethodsSupportedItem(String bearerMethodsSupportedItem) {
    if (this.bearerMethodsSupported == null) {
      this.bearerMethodsSupported = new ArrayList<String>();
    }
    this.bearerMethodsSupported.add(bearerMethodsSupportedItem);
    return this;
  }

   /**
   * Supported token presentation methods for bearer tokens
   * @return bearerMethodsSupported
  **/
  @Schema(example = "[\"header\",\"body\",\"query\"]", description = "Supported token presentation methods for bearer tokens")
  public List<String> getBearerMethodsSupported() {
    return bearerMethodsSupported;
  }

  public void setBearerMethodsSupported(List<String> bearerMethodsSupported) {
    this.bearerMethodsSupported = bearerMethodsSupported;
  }

  public OAuthProtectedResourceMetadata resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

   /**
   * Human-readable name of the protected resource
   * @return resourceName
  **/
  @Schema(example = "TMI (Threat Modeling Improved) API", description = "Human-readable name of the protected resource")
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }

  public OAuthProtectedResourceMetadata resourceDocumentation(String resourceDocumentation) {
    this.resourceDocumentation = resourceDocumentation;
    return this;
  }

   /**
   * URL with information for developers on how to use this protected resource
   * @return resourceDocumentation
  **/
  @Schema(example = "https://github.com/ericfitz/tmi", description = "URL with information for developers on how to use this protected resource")
  public String getResourceDocumentation() {
    return resourceDocumentation;
  }

  public void setResourceDocumentation(String resourceDocumentation) {
    this.resourceDocumentation = resourceDocumentation;
  }

  public OAuthProtectedResourceMetadata tlsClientCertificateBoundAccessTokens(Boolean tlsClientCertificateBoundAccessTokens) {
    this.tlsClientCertificateBoundAccessTokens = tlsClientCertificateBoundAccessTokens;
    return this;
  }

   /**
   * Whether the protected resource supports TLS client certificate bound access tokens
   * @return tlsClientCertificateBoundAccessTokens
  **/
  @Schema(example = "false", description = "Whether the protected resource supports TLS client certificate bound access tokens")
  public Boolean isTlsClientCertificateBoundAccessTokens() {
    return tlsClientCertificateBoundAccessTokens;
  }

  public void setTlsClientCertificateBoundAccessTokens(Boolean tlsClientCertificateBoundAccessTokens) {
    this.tlsClientCertificateBoundAccessTokens = tlsClientCertificateBoundAccessTokens;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OAuthProtectedResourceMetadata oauthProtectedResourceMetadata = (OAuthProtectedResourceMetadata) o;
    return Objects.equals(this.resource, oauthProtectedResourceMetadata.resource) &&
        Objects.equals(this.scopesSupported, oauthProtectedResourceMetadata.scopesSupported) &&
        Objects.equals(this.authorizationServers, oauthProtectedResourceMetadata.authorizationServers) &&
        Objects.equals(this.jwksUrl, oauthProtectedResourceMetadata.jwksUrl) &&
        Objects.equals(this.bearerMethodsSupported, oauthProtectedResourceMetadata.bearerMethodsSupported) &&
        Objects.equals(this.resourceName, oauthProtectedResourceMetadata.resourceName) &&
        Objects.equals(this.resourceDocumentation, oauthProtectedResourceMetadata.resourceDocumentation) &&
        Objects.equals(this.tlsClientCertificateBoundAccessTokens, oauthProtectedResourceMetadata.tlsClientCertificateBoundAccessTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, scopesSupported, authorizationServers, jwksUrl, bearerMethodsSupported, resourceName, resourceDocumentation, tlsClientCertificateBoundAccessTokens);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAuthProtectedResourceMetadata {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    scopesSupported: ").append(toIndentedString(scopesSupported)).append("\n");
    sb.append("    authorizationServers: ").append(toIndentedString(authorizationServers)).append("\n");
    sb.append("    jwksUrl: ").append(toIndentedString(jwksUrl)).append("\n");
    sb.append("    bearerMethodsSupported: ").append(toIndentedString(bearerMethodsSupported)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    resourceDocumentation: ").append(toIndentedString(resourceDocumentation)).append("\n");
    sb.append("    tlsClientCertificateBoundAccessTokens: ").append(toIndentedString(tlsClientCertificateBoundAccessTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
