/*
 * TMI (Threat Modeling Improved) API
 * A RESTful API for collaborative threat modeling with full X6 graph library compatibility. This API provides schemas that align with AntV X6 cell object models for seamless integration with modern diagramming libraries. Supports OAuth 2.0 authentication with client callback integration for seamless single-page application authentication flows.  ## API Design v1.0.0  ### Authorization Model TMI uses hierarchical authorization: access control is defined at the ThreatModel level via the authorization field (readers, writers, owners). All child resources (Assets, Diagrams, Documents, Notes, Repositories, Threats) inherit permissions from their parent ThreatModel. This simplifies permission management and ensures consistent access control.  ### Bulk Operations Notes and Diagrams do not support bulk operations due to their unique creation workflows and lack of valid bulk use cases. All other resources (Threats, Assets, Documents, Repositories) support full bulk operations: POST (create), PUT (upsert), PATCH (partial update), DELETE (batch delete).  All resources support bulk metadata operations regardless of resource-level bulk support.  ### List Response Strategy - ThreatModels return summary information (TMListItem) because they contain many child objects that can be large. - Diagrams return summary information (DiagramListItem) because diagram data (cells, images) can be large. - Notes return summary information (NoteListItem) because the content field can be large. - Threats, Assets, Documents, Repositories return full schemas as they are relatively small and static.  ### PATCH Support All resources support PATCH for partial updates using JSON Patch (RFC 6902). This is particularly useful for: - Assets: Array field updates (affected_assets, trust_boundaries) ensuring no duplicates - Notes: Updating name/description without changing content field - All resources: Efficient updates without full object replacement 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ApiInfoApi;
import io.swagger.client.model.ApiInfoOperator;
import io.swagger.client.model.ApiInfoService;
import io.swagger.client.model.ApiInfoStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * API information response for the root endpoint
 */
@Schema(description = "API information response for the root endpoint")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-11-01T19:29:35.350343762Z[GMT]")

public class ApiInfo {
  @SerializedName("status")
  private ApiInfoStatus status = null;

  @SerializedName("service")
  private ApiInfoService service = null;

  @SerializedName("api")
  private ApiInfoApi api = null;

  @SerializedName("operator")
  private ApiInfoOperator operator = null;

  public ApiInfo status(ApiInfoStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public ApiInfoStatus getStatus() {
    return status;
  }

  public void setStatus(ApiInfoStatus status) {
    this.status = status;
  }

  public ApiInfo service(ApiInfoService service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @Schema(required = true, description = "")
  public ApiInfoService getService() {
    return service;
  }

  public void setService(ApiInfoService service) {
    this.service = service;
  }

  public ApiInfo api(ApiInfoApi api) {
    this.api = api;
    return this;
  }

   /**
   * Get api
   * @return api
  **/
  @Schema(required = true, description = "")
  public ApiInfoApi getApi() {
    return api;
  }

  public void setApi(ApiInfoApi api) {
    this.api = api;
  }

  public ApiInfo operator(ApiInfoOperator operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @Schema(required = true, description = "")
  public ApiInfoOperator getOperator() {
    return operator;
  }

  public void setOperator(ApiInfoOperator operator) {
    this.operator = operator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiInfo apiInfo = (ApiInfo) o;
    return Objects.equals(this.status, apiInfo.status) &&
        Objects.equals(this.service, apiInfo.service) &&
        Objects.equals(this.api, apiInfo.api) &&
        Objects.equals(this.operator, apiInfo.operator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, service, api, operator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiInfo {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
