/*
 * TMI (Threat Modeling Improved) API
 * A RESTful API for collaborative threat modeling with full X6 graph library compatibility. This API provides schemas that align with AntV X6 cell object models for seamless integration with modern diagramming libraries. Supports OAuth 2.0 authentication with client callback integration for seamless single-page application authentication flows.  ## API Design v1.0.0  ### Authorization Model TMI uses hierarchical authorization: access control is defined at the ThreatModel level via the authorization field (readers, writers, owners). All child resources (Assets, Diagrams, Documents, Notes, Repositories, Threats) inherit permissions from their parent ThreatModel. This simplifies permission management and ensures consistent access control.  ### Bulk Operations Notes and Diagrams do not support bulk operations due to their unique creation workflows and lack of valid bulk use cases. All other resources (Threats, Assets, Documents, Repositories) support full bulk operations: POST (create), PUT (upsert), PATCH (partial update), DELETE (batch delete).  All resources support bulk metadata operations regardless of resource-level bulk support.  ### List Response Strategy - ThreatModels return summary information (TMListItem) because they contain many child objects that can be large. - Diagrams return summary information (DiagramListItem) because diagram data (cells, images) can be large. - Notes return summary information (NoteListItem) because the content field can be large. - Threats, Assets, Documents, Repositories return full schemas as they are relatively small and static.  ### PATCH Support All resources support PATCH for partial updates using JSON Patch (RFC 6902). This is particularly useful for: - Assets: Array field updates (affected_assets, trust_boundaries) ensuring no duplicates - Notes: Updating name/description without changing content field - All resources: Efficient updates without full object replacement 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse2004Providers
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-11-01T19:29:35.350343762Z[GMT]")

public class InlineResponse2004Providers {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("auth_url")
  private String authUrl = null;

  @SerializedName("token_url")
  private String tokenUrl = null;

  @SerializedName("redirect_uri")
  private String redirectUri = null;

  @SerializedName("client_id")
  private String clientId = null;

  public InlineResponse2004Providers id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Provider identifier
   * @return id
  **/
  @Schema(required = true, description = "Provider identifier")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse2004Providers name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Display name of the provider
   * @return name
  **/
  @Schema(required = true, description = "Display name of the provider")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse2004Providers icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Icon identifier for the provider
   * @return icon
  **/
  @Schema(required = true, description = "Icon identifier for the provider")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public InlineResponse2004Providers authUrl(String authUrl) {
    this.authUrl = authUrl;
    return this;
  }

   /**
   * TMI authorization endpoint URL for this provider
   * @return authUrl
  **/
  @Schema(required = true, description = "TMI authorization endpoint URL for this provider")
  public String getAuthUrl() {
    return authUrl;
  }

  public void setAuthUrl(String authUrl) {
    this.authUrl = authUrl;
  }

  public InlineResponse2004Providers tokenUrl(String tokenUrl) {
    this.tokenUrl = tokenUrl;
    return this;
  }

   /**
   * TMI token exchange endpoint URL for this provider
   * @return tokenUrl
  **/
  @Schema(required = true, description = "TMI token exchange endpoint URL for this provider")
  public String getTokenUrl() {
    return tokenUrl;
  }

  public void setTokenUrl(String tokenUrl) {
    this.tokenUrl = tokenUrl;
  }

  public InlineResponse2004Providers redirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * OAuth callback URI configured for this provider
   * @return redirectUri
  **/
  @Schema(required = true, description = "OAuth callback URI configured for this provider")
  public String getRedirectUri() {
    return redirectUri;
  }

  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }

  public InlineResponse2004Providers clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * OAuth client ID for this provider
   * @return clientId
  **/
  @Schema(required = true, description = "OAuth client ID for this provider")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004Providers inlineResponse2004Providers = (InlineResponse2004Providers) o;
    return Objects.equals(this.id, inlineResponse2004Providers.id) &&
        Objects.equals(this.name, inlineResponse2004Providers.name) &&
        Objects.equals(this.icon, inlineResponse2004Providers.icon) &&
        Objects.equals(this.authUrl, inlineResponse2004Providers.authUrl) &&
        Objects.equals(this.tokenUrl, inlineResponse2004Providers.tokenUrl) &&
        Objects.equals(this.redirectUri, inlineResponse2004Providers.redirectUri) &&
        Objects.equals(this.clientId, inlineResponse2004Providers.clientId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, icon, authUrl, tokenUrl, redirectUri, clientId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004Providers {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    authUrl: ").append(toIndentedString(authUrl)).append("\n");
    sb.append("    tokenUrl: ").append(toIndentedString(tokenUrl)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
