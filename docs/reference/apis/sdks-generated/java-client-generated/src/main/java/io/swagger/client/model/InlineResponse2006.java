/*
 * TMI (Threat Modeling Improved) API
 * A RESTful API for collaborative threat modeling with full X6 graph library compatibility. This API provides schemas that align with AntV X6 cell object models for seamless integration with modern diagramming libraries. Supports OAuth 2.0 authentication with client callback integration for seamless single-page application authentication flows.  ## API Design v1.0.0  ### Authorization Model TMI uses hierarchical authorization: access control is defined at the ThreatModel level via the authorization field (readers, writers, owners). All child resources (Assets, Diagrams, Documents, Notes, Repositories, Threats) inherit permissions from their parent ThreatModel. This simplifies permission management and ensures consistent access control.  ### Bulk Operations Notes and Diagrams do not support bulk operations due to their unique creation workflows and lack of valid bulk use cases. All other resources (Threats, Assets, Documents, Repositories) support full bulk operations: POST (create), PUT (upsert), PATCH (partial update), DELETE (batch delete).  All resources support bulk metadata operations regardless of resource-level bulk support.  ### List Response Strategy - ThreatModels return summary information (TMListItem) because they contain many child objects that can be large. - Diagrams return summary information (DiagramListItem) because diagram data (cells, images) can be large. - Notes return summary information (NoteListItem) because the content field can be large. - Threats, Assets, Documents, Repositories return full schemas as they are relatively small and static.  ### PATCH Support All resources support PATCH for partial updates using JSON Patch (RFC 6902). This is particularly useful for: - Assets: Array field updates (affected_assets, trust_boundaries) ensuring no duplicates - Notes: Updating name/description without changing content field - All resources: Efficient updates without full object replacement 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse2006Providers;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * InlineResponse2006
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-11-01T19:29:35.350343762Z[GMT]")

public class InlineResponse2006 {
  @SerializedName("sub")
  private String sub = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("idp")
  private String idp = null;

  @SerializedName("groups")
  private List<String> groups = null;

  @SerializedName("providers")
  private List<InlineResponse2006Providers> providers = null;

  public InlineResponse2006 sub(String sub) {
    this.sub = sub;
    return this;
  }

   /**
   * Subject identifier (email or provider-assigned ID)
   * @return sub
  **/
  @Schema(description = "Subject identifier (email or provider-assigned ID)")
  public String getSub() {
    return sub;
  }

  public void setSub(String sub) {
    this.sub = sub;
  }

  public InlineResponse2006 id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the user (UUID)
   * @return id
  **/
  @Schema(required = true, description = "Unique identifier for the user (UUID)")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public InlineResponse2006 email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User email address
   * @return email
  **/
  @Schema(required = true, description = "User email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public InlineResponse2006 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * User display name
   * @return name
  **/
  @Schema(required = true, description = "User display name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse2006 idp(String idp) {
    this.idp = idp;
    return this;
  }

   /**
   * Current identity provider
   * @return idp
  **/
  @Schema(description = "Current identity provider")
  public String getIdp() {
    return idp;
  }

  public void setIdp(String idp) {
    this.idp = idp;
  }

  public InlineResponse2006 groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public InlineResponse2006 addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<String>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Groups the user belongs to
   * @return groups
  **/
  @Schema(description = "Groups the user belongs to")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public InlineResponse2006 providers(List<InlineResponse2006Providers> providers) {
    this.providers = providers;
    return this;
  }

  public InlineResponse2006 addProvidersItem(InlineResponse2006Providers providersItem) {
    if (this.providers == null) {
      this.providers = new ArrayList<InlineResponse2006Providers>();
    }
    this.providers.add(providersItem);
    return this;
  }

   /**
   * Linked OAuth providers
   * @return providers
  **/
  @Schema(description = "Linked OAuth providers")
  public List<InlineResponse2006Providers> getProviders() {
    return providers;
  }

  public void setProviders(List<InlineResponse2006Providers> providers) {
    this.providers = providers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006 inlineResponse2006 = (InlineResponse2006) o;
    return Objects.equals(this.sub, inlineResponse2006.sub) &&
        Objects.equals(this.id, inlineResponse2006.id) &&
        Objects.equals(this.email, inlineResponse2006.email) &&
        Objects.equals(this.name, inlineResponse2006.name) &&
        Objects.equals(this.idp, inlineResponse2006.idp) &&
        Objects.equals(this.groups, inlineResponse2006.groups) &&
        Objects.equals(this.providers, inlineResponse2006.providers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sub, id, email, name, idp, groups, providers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006 {\n");
    
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    idp: ").append(toIndentedString(idp)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
