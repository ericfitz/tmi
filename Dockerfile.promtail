# Multi-stage build for Promtail with dynamic latest release detection
# Stage 1: Fetch and extract Promtail binary
FROM cgr.dev/chainguard/wolfi-base:latest AS fetcher

# Metadata for tracking
LABEL security.scan-date="AUTO_GENERATED"
LABEL security.patch-level="minimal-attack-surface"
LABEL maintainer="TMI Security Team"

# Install required tools for download and extraction
RUN apk add --no-cache curl jq unzip

# Set working directory
WORKDIR /tmp

# Fetch the latest release metadata from GitHub API and download promtail-linux-arm64.zip
RUN LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/grafana/loki/releases/latest | \
    jq -r '.assets[] | select(.name == "promtail-linux-arm64.zip") | .browser_download_url') && \
    echo "Downloading Promtail from: $LATEST_RELEASE_URL" && \
    curl -L -o promtail-linux-arm64.zip "$LATEST_RELEASE_URL" && \
    unzip promtail-linux-arm64.zip && \
    chmod +x promtail-linux-arm64

# Stage 2: Minimal runtime with Chainguard bash base (includes bash and core utils)
FROM cgr.dev/chainguard/bash:latest

# Metadata for tracking security patches
LABEL security.distroless="true"
LABEL security.scan-date="AUTO_GENERATED"
LABEL security.patch-level="minimal-attack-surface"
LABEL maintainer="TMI Security Team"
LABEL org.opencontainers.image.title="Promtail (Chainguard bash)"
LABEL org.opencontainers.image.description="Grafana Promtail log aggregator on Chainguard bash base"
LABEL org.opencontainers.image.name="tmi/promtail"

# Copy promtail binary from fetcher stage
COPY --from=fetcher /tmp/promtail-linux-arm64 /promtail

# Copy promtail configuration template (no secrets)
COPY promtail/config.yaml.template /etc/promtail/config.yaml.template

# Copy entrypoint script for runtime config generation
COPY --chmod=755 promtail/entrypoint.sh /entrypoint.sh

# Set working directory
WORKDIR /

# Run as non-root user (bash image runs as nonroot by default)
USER nonroot:nonroot

# Note: LOKI_URL, LOKI_USERNAME, and LOKI_PASSWORD must be provided at runtime
# via docker run -e or docker-compose environment sections

# Run entrypoint script which generates config and starts promtail
ENTRYPOINT ["/entrypoint.sh"]
